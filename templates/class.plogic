
#class_type {
  Value: @class_entry.type;
}

#class_name {
  Value: @class_entry.name;
}

#class_description {
  logic: {
    class_desc, class_content = @class_entry.html_content.split(/\n\n/, 2)
    _elem()
  }
}

#class_desc {
  VALUE: class_desc;
}

#class_content {
  VALUE: class_content;
}

#class_content_wrapper {
  logic: {
    if not class_content.to_s.strip.empty?
      _cont()
    end
  }
}

#method_entries {
  logic: {
    _stag()
    i = 0
    @class_entry.children.each do |entry|
      i += 1
      classattr = i.odd? ? 'odd' : 'even'
      _cont()
    end
    _etag()
  }
}

#method_entries_empty {
  logic: {
    if @class_entry.children.empty?
      _elem()
    end
  }
}

#method_entry {
  attrs: 'class' classattr;
}

#method_anchor {
  attrs: 'name' entry.url[1..-1];
}

#method_link {
  Value: entry.name;
  attrs: 'href' entry.url;
  append: entry.important? ? 'class="important"' : '';
}

#method_desc {
  Value: entry.desc;
}

#method_content {
  VALUE: entry.html_content;
}


#ancestor_entries {
  logic: {
    i = 0
    @class_entry.ancestors.each do |ancestor_entry|
      _elem()
    end
  }
}

#ancestor_entries_empty {
  logic: {
    if @class_entry.ancestors.empty?
      _elem()
    end
  }
}

#ancestor_type {
  Value: ancestor_entry.type;
}

#ancestor_link {
  Value: ancestor_entry.name;
  attrs: 'href' "#{ancestor_entry.url}";
}

#ancestor_methods {
  attrs: 'class' classattr;
  logic: {
    #i = 0
    ancestor_entry.children.each do |ancestor_method_entry|
      i += 1
      classattr = i.odd? ? 'odd' : 'even'
      _elem()
    end
  }
}

#ancestor_method_link {
  Value: ancestor_method_entry.name;
  attrs: 'href' "#{ancestor_entry.url}#{ancestor_method_entry.url}";
}

#ancestor_method_desc {
  Value: ancestor_method_entry.short_desc;
}


